plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

//apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    defaultConfig {
        configurations.all {
            resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
        }
        applicationId "com.atob.hackathon"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding{
        enabled=true
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Android 프레임워크의 일부인 일반 라이브러리에 확장 프로그램을 제공
    implementation 'androidx.core:core-ktx:1.7.0'

    // material design(BottomNavigationView)
    // 이전 버전에서 발전된 UI를 지원하지 않을 경우 앱 내부의 Appcompat 라이브러리에 포함된 UI를 사용하고
    // 사용자의 안드로이드 버전에서 지원할 경우 사용자 안드로이드의 UI를 사용
    implementation 'androidx.appcompat:appcompat:1.3.1'

    // material 디자인은 플랫폼 및 기기 전반의 시각적 요소, 모션 및 상호작용 디자인을 위한 포괄적인 가이드
    implementation 'com.google.android.material:material:1.4.0'

    // 상대 위치에 따라 유연한 방식으로 위젯의 위치와 크기를 지정하는 constraintlayout 라이브러리
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    // recyclerview 라이브러리
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // 자바 오브젝트를 쉽게 JSON으로 변환
    implementation 'com.google.code.gson:gson:2.8.6'


    // 안드로이드 시스템과 별개로 돌아가는 단위 테스트 라이브럴. 단위 테스트는 개발 시간도 단축시켜 줌
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'



    // firebase 플랫폼의 BoM 가져오기
    implementation platform('com.google.firebase:firebase-bom:28.4.2')

    // 클라우드 스토리지 라이브러리에 대한 종속성 선언
    // BoM을 사용할 때 파이어베이스 라이브러리 종속성에 버전을 지정하지 않음
    implementation 'com.google.firebase:firebase-storage-ktx'

    // 클라우드 스토리지 라이브러리에 대한 종속성 선언
    // BoM을 사용할 땐 firebase 라이브러리 종속성에 버전을 지정하지 않음
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // Authentication는 앱에서 사용자 인증 시 필요한 백엔드 서비스와 사용하기 쉬운 SDK, 기성 UI를 제공하는 라이브러리
    implementation 'com.google.firebase:firebase-auth:21.0.1'

    // Lottie는 에어비엔비에서 개발한 오픈소스 모바일 라이브러리이다. JSON 기반 애니메이션 파일 형식실시간으로 애니메이션을 랜더링한다.
    implementation 'com.airbnb.android:lottie:3.7.0'

    // realtime database 라이브러리에 대한 종속성 선언
    implementation 'com.google.firebase:firebase-database-ktx'

    // Android 에서는 비동기 프로그래밍을 위한 방법으로 Kotlin Coroutines 사용을 위한 라이브러리
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.5'

    // Java코드로 된 Tedpermission을 코틀린에서 사용하기 위한 방법
    implementation 'gun0912.ted:tedpermission:2.2.3'

    // 매칭 페이지에서 회원을 스와이프로 like 또는 dislike 할 떄 사용할 cardStackView 라이브러리
    implementation "com.yuyakaido.android:card-stack-view:2.3.4"

}
